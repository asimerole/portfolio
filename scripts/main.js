const translations = {
  English: {
    language: "English üá¨üáß",
    home: "HOME",
    about: "ABOUT",
    projects: "PROJECTS",
    contacts: "CONTACTS",
    rights: "Copyright ¬© 2025 | Shepelev Artem",
    my_position: "SOFTWARE DEVELOPER",
    contacts_button: "GET IN TOUCH",
    contact_mid_head: "CONTACT",
    new_projects_status: "Open for new projects.",
    form_name: "Your Name",
    form_mail: "Your Email",
    form_msg: "Your Message",
    form_btn: "Send",
    about_card_content: "Click for more detailed information",
    cpp_modal_description: "Deep understanding of basic and modern C++ syntax (C++11/14/17). OOP principles, working with pointers, dynamic memory, copy constructor. Using third-party libraries: Boost (Asio, Filesystem), libcurl for network and ftp requests, WinAPI for working with native windows and Windows system resources.",
    qt_modal_description: "Development of cross-platform GUI applications in C++. Experience with widgets, events, signal and slot processing. Working with tables and databases, filtering, authorization.",
    git_modal_description: "Experience with the distributed version control system Git. Using branching, merging, working with commit histories, conflict resolution.",
    cmake_modal_description: "Configuration and assembly of cross-platform projects in C++. Experience with CMakeLists.txt, dependency management, creation of build systems for Windows.",
    github_modal_description: "Working with remote repositories on GitHub. Creating pull requests, managing projects using issues, management using Open Source approaches.",
    sql_modal_description: "Experience with relational databases. Creating complex queries using JOIN (LEFT JOIN), filtering and sorting data using ORDER BY. Designing table structures, optimizing queries.",
    csharp_modal_description: "Experience in C# development: basic and advanced syntax, working with WPF and LINQ to process collections. Application of OOP principles. Development of game mechanics in Unity Engine.",
    about_text: `
      Hey, I am Artem. Enthusiastic C++ developer<br><br>
      I‚Äôm a junior developer who came into programming through a conscious passion for technology. I got my first computer at the age of five, but my true interest in software development emerged later, when I realized how code could be used to solve real-world problems.
      <br><br>
      I began my journey in development with C++ ‚Äî it's the language I used to create, and still continue to create, desktop applications. During my university studies, I was introduced to C#, and now I‚Äôm deeply immersed in learning this language and its frameworks. At the same time, I haven‚Äôt forgotten about C++: working on different projects helps me improve my syntax and discover new libraries and tools.
      <br><br>
      Today, I specialize in developing both web and desktop applications, working with technologies such as C++, Boost, WinAPI, curl, and SQL Server. I also have experience in server setup, app deployment, and building internal infrastructure for team-based projects.
      <br><br>                    
      My approach to work combines system thinking, responsibility, and a strong drive for clarity. For me, it‚Äôs not just about writing code, but about creating solutions that genuinely benefit people.
    `
  },
  Deutsch: {
    language: "Deutsch üá©üá™",
    home: "STARTSEITE",
    about: "√úBER MICH",
    projects: "PROJEKTE",
    contacts: "KONTAKT",
    rights: "¬© 2025 | Alle Rechte vorbehalten",
    my_position: "SOFTWARE ENTWICKLER",
    contacts_button: "IN KONTAKT TRETEN",
    contact_mid_head: "KONTAKT",
    new_projects_status: "Offen f√ºr neue Projekte.",
    form_name: "Ihr Name",
    form_mail: "Ihre E-Mail",
    form_msg: "Ihre Nachricht",
    form_btn: "Abschicken",
    about_card_content: "Klicken Sie hier f√ºr weitere Informationen",
    cpp_modal_description: "Tiefes Verst√§ndnis der grundlegenden und modernen C++-Syntax (C++11/14/17). OOP-Prinzipien, Arbeiten mit Zeigern, dynamischer Speicher, Kopierkonstruktor. Verwendung von Drittanbieterbibliotheken: Boost (Asio, Dateisystem), libcurl f√ºr Netzwerk- und FTP-Anfragen, WinAPI f√ºr die Arbeit mit nativen Windows- und Windows-Systemressourcen.",
    qt_modal_description: "Entwicklung plattform√ºbergreifender GUI-Anwendungen in C++. Erfahrung mit Widgets, Ereignissen, Signal- und Slot-Verarbeitung. Umgang mit Tabellen und Datenbanken, Filterung und Autorisierung.",
    git_modal_description: "Erfahrung mit dem verteilten Versionskontrollsystem Git. Verwenden von Branching, Zusammenf√ºhren, Arbeiten mit Commit-Verl√§ufen, Konfliktl√∂sung.",
    cmake_modal_description: "Konfiguration und Assemblierung plattform√ºbergreifender Projekte in C++. Erfahrung mit CMakeLists.txt, Abh√§ngigkeitsmanagement und Erstellung von Build-Systemen f√ºr Windows.",
    github_modal_description: "Arbeiten mit Remote-Repositories auf GitHub. Erstellen von Pull Requests, Verwalten von Projekten mithilfe von Issues, Management mithilfe von Open Source-Ans√§tzen.",
    sql_modal_description: "Erfahrung mit relationalen Datenbanken. Erstellen komplexer Abfragen mit JOIN (LEFT JOIN), Filtern und Sortieren von Daten mit ORDER BY. Entwerfen von Tabellenstrukturen, Optimieren von Abfragen.",
    csharp_modal_description: "Erfahrung in der C#-Entwicklung: Grundlegende und fortgeschrittene Syntax, Arbeit mit WPF und LINQ zur Verarbeitung von Collections. Anwendung von OOP-Prinzipien. Entwicklung von Spielmechaniken in der Unity Engine.",
    about_text: `
      Hey, ich bin Artem. Begeisterter C++-Entwickler<br><br>
      Ich bin ein Junior-Entwickler, der durch eine bewusste Leidenschaft f√ºr Technologie zum Programmieren gekommen ist. Meinen ersten Computer bekam ich mit f√ºnf Jahren, aber mein echtes Interesse an Softwareentwicklung entstand sp√§ter, als ich erkannte, dass man mit Code reale Probleme l√∂sen kann.
      <br><br>
      Ich begann meine Reise in der Entwicklung mit C++ ‚Äì das ist die Sprache, mit der ich Desktop-Anwendungen erstellt habe und weiterhin erstelle. W√§hrend meines Studiums lernte ich C# kennen und vertiefe mich nun intensiv in diese Sprache und ihre Frameworks. Gleichzeitig habe ich C++ nicht vergessen: Die Arbeit an verschiedenen Projekten hilft mir, meine Syntax zu verbessern und neue Bibliotheken und Tools zu entdecken.
      <br><br>
      Heute spezialisiere ich mich auf die Entwicklung von Web- und Desktop-Anwendungen und arbeite mit Technologien wie C++, Boost, WinAPI, curl und SQL Server. Ich habe auch Erfahrung in der Serverkonfiguration, dem Deployment von Anwendungen und dem Aufbau interner Infrastruktur f√ºr Teamprojekte.
      <br><br>
      Mein Arbeitsansatz kombiniert systemisches Denken, Verantwortungsbewusstsein und einen starken Drang nach Klarheit. F√ºr mich geht es beim Programmieren nicht nur um das Schreiben von Code, sondern darum, L√∂sungen zu schaffen, die den Menschen wirklich helfen.
    `
  },
  –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞: {
    language: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ üá∫üá¶",
    home: "–ì–û–õ–û–í–ù–ê",
    about: "–ü–†–û –ú–ï–ù–ï",
    projects: "–ü–†–û–Ñ–ö–¢–ò",
    contacts: "–ö–û–ù–¢–ê–ö–¢–ò",
    rights: "¬© 2025 | –£—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ",
    my_position: "–†–û–ó–†–û–ë–ù–ò–ö –ü–†–û–ì–†–ê–ú–ù–û–ì–û –ó–ê–ë–ï–ó–ü–ï–ß–ï–ù–ù–Ø",
    contacts_button: "–ó–í‚Äô–Ø–ó–ê–¢–ò–°–Ø –ó–Ü –ú–ù–û–Æ",
    contact_mid_head: "–ö–û–ù–¢–ê–ö–¢",
    new_projects_status: "–í—ñ–¥–∫—Ä–∏—Ç–∏–π –¥–ª—è –Ω–æ–≤–∏—Ö –ø—Ä–æ—î–∫—Ç—ñ–≤.",
    form_name: "–í–∞—à–µ —ñ–º‚Äô—è",
    form_mail: "–í–∞—à–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞",
    form_msg: "–í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è",
    form_btn: "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏",
    about_card_content: "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –¥–ª—è –±—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó",
    cpp_modal_description: "–ì–ª–∏–±–æ–∫–µ —Ä–æ–∑—É–º—ñ–Ω–Ω—è –±–∞–∑–æ–≤–æ–≥–æ —Ç–∞ —Å—É—á–∞—Å–Ω–æ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É C++ (C++11/14/17). –ü—Ä–∏–Ω—Ü–∏–ø–∏ –û–û–ü, —Ä–æ–±–æ—Ç–∞ –∑ –≤–∫–∞–∑—ñ–≤–Ω–∏–∫–∞–º–∏, –¥–∏–Ω–∞–º—ñ—á–Ω–∞ –ø–∞–º'—è—Ç—å, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å—Ç–æ—Ä–æ–Ω–Ω—ñ—Ö –±—ñ–±–ª—ñ–æ—Ç–µ–∫: Boost (Asio, Filesystem), libcurl –¥–ª—è –º–µ—Ä–µ–∂–µ–≤–∏—Ö —Ç–∞ ftp-–∑–∞–ø–∏—Ç—ñ–≤, WinAPI –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –Ω–∞—Ç–∏–≤–Ω–∏–º–∏ Windows —Ç–∞ —Å–∏—Å—Ç–µ–º–Ω–∏–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏ Windows.",
    qt_modal_description: "–†–æ–∑—Ä–æ–±–∫–∞ –∫—Ä–æ—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–Ω–∏—Ö –≥—Ä–∞—Ñ—ñ—á–Ω–∏—Ö –∑–∞—Å—Ç–æ—Å—É–Ω–∫—ñ–≤ –Ω–∞ C++. –î–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏ –∑ –≤—ñ–¥–∂–µ—Ç–∞–º–∏, –ø–æ–¥—ñ—è–º–∏, –æ–±—Ä–æ–±–∫–æ—é —Å–∏–≥–Ω–∞–ª—ñ–≤ —Ç–∞ —Å–ª–æ—Ç—ñ–≤. –†–æ–±–æ—Ç–∞ –∑ —Ç–∞–±–ª–∏—Ü—è–º–∏ —Ç–∞ –±–∞–∑–∞–º–∏ –¥–∞–Ω–∏—Ö, —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è.",
    git_modal_description: "–î–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏ –∑ —Ä–æ–∑–ø–æ–¥—ñ–ª–µ–Ω–æ—é —Å–∏—Å—Ç–µ–º–æ—é –∫–æ–Ω—Ç—Ä–æ–ª—é –≤–µ—Ä—Å—ñ–π Git. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ä–æ–∑–≥–∞–ª—É–∂–µ–Ω–Ω—è, –∑–ª–∏—Ç—Ç—è, —Ä–æ–±–æ—Ç–∞ –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é –∫–æ–º—ñ—Ç—ñ–≤, –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤.",
    cmake_modal_description: "–ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è —Ç–∞ –∑–±—ñ—Ä–∫–∞ –∫—Ä–æ—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç—ñ–≤ –Ω–∞ C++. –î–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏ –∑ CMakeLists.txt, —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—è–º–∏, —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º –∑–±—ñ—Ä–∫–∏ –¥–ª—è Windows.",
    github_modal_description: "–†–æ–±–æ—Ç–∞ –∑ –≤—ñ–¥–¥–∞–ª–µ–Ω–∏–º–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—è–º–∏ –Ω–∞ GitHub. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—É–ª-—Ä–µ–∫–≤–µ—Å—Ç—ñ–≤, —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–æ—î–∫—Ç–∞–º–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∑–∞–¥–∞—á, —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –ø—ñ–¥—Ö–æ–¥—ñ–≤ Open Source.",
    sql_modal_description: "–î–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏ –∑ —Ä–µ–ª—è—Ü—ñ–π–Ω–∏–º–∏ –±–∞–∑–∞–º–∏ –¥–∞–Ω–∏—Ö. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫–ª–∞–¥–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é JOIN (LEFT JOIN), —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é ORDER BY. –ü—Ä–æ–µ–∫—Ç—É–≤–∞–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä —Ç–∞–±–ª–∏—Ü—å, –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –∑–∞–ø–∏—Ç—ñ–≤.",
    csharp_modal_description: "–î–æ—Å–≤—ñ–¥ —Ä–æ–∑—Ä–æ–±–∫–∏ –Ω–∞ C#: –±–∞–∑–æ–≤–∏–π —Ç–∞ –ø—Ä–æ—Å—É–Ω—É—Ç–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, —Ä–æ–±–æ—Ç–∞ –∑ WPF —Ç–∞ LINQ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–æ–ª–µ–∫—Ü—ñ–π. –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ø—Ä–∏–Ω—Ü–∏–ø—ñ–≤ –û–û–ü. –†–æ–∑—Ä–æ–±–∫–∞ —ñ–≥—Ä–æ–≤–∏—Ö –º–µ—Ö–∞–Ω—ñ–∫ –≤ Unity Engine.",
    about_text: `
      –ü—Ä–∏–≤—ñ—Ç, —è –ê—Ä—Ç–µ–º. –ó–∞—Ö–æ–ø–ª–µ–Ω–∏–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫ C++<br><br>
      –Ø ‚Äî –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫, —è–∫–∏–π –ø—Ä–∏–π—à–æ–≤ —É –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ —É—Å–≤—ñ–¥–æ–º–ª–µ–Ω—É –ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç—å –¥–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π. –ü–µ—Ä—à–∏–π –∫–æ–º–ø‚Äô—é—Ç–µ—Ä —É –º–µ–Ω–µ –∑‚Äô—è–≤–∏–≤—Å—è —É –ø‚Äô—è—Ç—å —Ä–æ–∫—ñ–≤, –∞–ª–µ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π —ñ–Ω—Ç–µ—Ä–µ—Å –¥–æ —Ä–æ–∑—Ä–æ–±–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –≤–∏–Ω–∏–∫ –ø—ñ–∑–Ω—ñ—à–µ, –∫–æ–ª–∏ —è –∑—Ä–æ–∑—É–º—ñ–≤, —â–æ –∫–æ–¥ –º–æ–∂–µ –≤–∏—Ä—ñ—à—É–≤–∞—Ç–∏ —Ä–µ–∞–ª—å–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏.
      <br><br>
      –Ø –ø–æ—á–∞–≤ —Å–≤—ñ–π —à–ª—è—Ö —É —Ä–æ–∑—Ä–æ–±—Ü—ñ –∑ C++ ‚Äî —Ü–µ –º–æ–≤–∞, –∑ —è–∫–æ—é —è —Å—Ç–≤–æ—Ä—é–≤–∞–≤ —ñ –¥–æ—Å—ñ —Å—Ç–≤–æ—Ä—é—é –¥–µ—Å–∫—Ç–æ–ø–Ω—ñ –¥–æ–¥–∞—Ç–∫–∏. –ü—ñ–¥ —á–∞—Å –Ω–∞–≤—á–∞–Ω–Ω—è –≤ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ —è –ø–æ–∑–Ω–∞–π–æ–º–∏–≤—Å—è –∑ C#, —ñ –∑–∞—Ä–∞–∑ –∞–∫—Ç–∏–≤–Ω–æ –≤–∏–≤—á–∞—é —Ü—é –º–æ–≤—É —Ç–∞ —ó—ó —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏. –í–æ–¥–Ω–æ—á–∞—Å —è –Ω–µ –∑–∞–±—É–≤ –ø—Ä–æ C++: —Ä–æ–±–æ—Ç–∞ –Ω–∞–¥ —Ä—ñ–∑–Ω–∏–º–∏ –ø—Ä–æ—î–∫—Ç–∞–º–∏ –¥–æ–ø–æ–º–∞–≥–∞—î –º–µ–Ω—ñ –≤–¥–æ—Å–∫–æ–Ω–∞–ª—é–≤–∞—Ç–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Ç–∞ –≤—ñ–¥–∫—Ä–∏–≤–∞—Ç–∏ –Ω–æ–≤—ñ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ –π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏.
      <br><br>
      –°—å–æ–≥–æ–¥–Ω—ñ —è —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—é—Å—å –Ω–∞ —Ä–æ–∑—Ä–æ–±—Ü—ñ —è–∫ –≤–µ–±, —Ç–∞–∫ —ñ –¥–µ—Å–∫—Ç–æ–ø–Ω–∏—Ö –∑–∞—Å—Ç–æ—Å—É–Ω–∫—ñ–≤, –ø—Ä–∞—Ü—é—é—á–∏ –∑ —Ç–∞–∫–∏–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—è–º–∏, —è–∫ C++, Boost, WinAPI, curl —ñ SQL Server. –¢–∞–∫–æ–∂ –º–∞—é –¥–æ—Å–≤—ñ–¥ —É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—ñ —Å–µ—Ä–≤–µ—Ä—ñ–≤, –¥–µ–ø–ª–æ–π–º–µ–Ω—Ç—ñ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—ñ–≤ —ñ –ø–æ–±—É–¥–æ–≤—ñ –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ—ó —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥–Ω–∏—Ö –ø—Ä–æ—î–∫—Ç—ñ–≤.
      <br><br>
      –ú—ñ–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ —Ä–æ–±–æ—Ç–∏ –ø–æ—î–¥–Ω—É—î —Å–∏—Å—Ç–µ–º–Ω–µ –º–∏—Å–ª–µ–Ω–Ω—è, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å —ñ –ø—Ä–∞–≥–Ω–µ–Ω–Ω—è –¥–æ —è—Å–Ω–æ—Å—Ç—ñ. –î–ª—è –º–µ–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è ‚Äî —Ü–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞–Ω–Ω—è –∫–æ–¥—É, –∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä—ñ—à–µ–Ω—å, —â–æ —Ä–µ–∞–ª—å–Ω–æ –ø—Ä–∏–Ω–æ—Å—è—Ç—å –∫–æ—Ä–∏—Å—Ç—å –ª—é–¥—è–º.
    `
  }
};

// Language menu
function toggleLangMenu() {
  const menu = document.getElementById("langMenu");
  menu.style.display = menu.style.display === "block" ? "none" : "block";
}

// Close on click outside
document.addEventListener('click', function(event) {
  const lang = document.querySelector('.lang');
  const menu = document.getElementById("langMenu");

  if (!lang.contains(event.target)) {
    menu.style.display = 'none';
  }
});

// Use of language
function setLanguage(lang) {
  const t = translations[lang];
  if (!t) return;

  const htmlFields = ["about_text"];
  const update = (id, text) => {
    const el = document.getElementById(id);
    if (!el) return; 
    if (htmlFields.includes(id)) {
      el.innerHTML = text;
    } else {
      el.textContent = text;
    }
  };

  update("language", t.language);
  update("nav-home-desktop", t.home);
  update("nav-about-desktop", t.about);
  update("nav-projects-desktop", t.projects);
  update("nav-contacts-desktop", t.contacts);
  update("nav-home-mobile", t.home);
  update("nav-about-mobile", t.about);
  update("nav-projects-mobile", t.projects);
  update("nav-contacts-mobile", t.contacts);
  update("rights", t.rights);
  update("my-position", t.my_position);
  update("contacts-button", t.contacts_button);
  update("contact-header", t.contact_top_head);
  update("contact-mid-header", t.contact_mid_head);
  update("projects-status", t.new_projects_status);
  update("form-name", t.form_name);
  update("form-email", t.form_mail);
  update("form-msg", t.form_msg);
  update("form-button", t.form_btn);
  update("about-card-content", t.about_card_content);
  update("about_text", t.about_text);

  document.querySelector('.lang__current').textContent = lang;
  localStorage.setItem('lang', lang);

  const cards = document.querySelectorAll('.card');
  cards.forEach(card => {
    const p = card.querySelector('.card_content');
    if (p) p.textContent = t.about_card_content;
  });
}

// Clicks on language items
document.querySelectorAll('.lang__list a').forEach(link => {
  link.addEventListener('click', function(e) {
    e.preventDefault();
    const selectedLang = this.getAttribute('data-lang');
    setLanguage(selectedLang);
    document.getElementById("langMenu").style.display = 'none';
  });
});

// Autoload selected language
document.addEventListener("DOMContentLoaded", () => {
  const savedLang = localStorage.getItem('lang') || 'English';
  setLanguage(savedLang);
});

// fade out
document.addEventListener('DOMContentLoaded', () => {
    const links = document.querySelectorAll('.transition-link');
  
    links.forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault(); // cancel transition
  
        const href = this.getAttribute('href');
        
        document.body.classList.add('fade-out'); // turn on animation
  
        // We wait for the animation to finish and move on.
        setTimeout(() => {
          window.location.href = href;
        }, 500); // 500ms = –∫–∞–∫ –≤ CSS
      });
    });
  });

  function getCurrentLang() {
    return localStorage.getItem('lang') || 'English';
  }

  function openModal(cardElement) {
    const currentLang = getCurrentLang();
    const translationsForLang = translations[currentLang];

    const title = cardElement.dataset.title;
    const textKey = cardElement.dataset.textKey;

    const text = translationsForLang[textKey] || '[Translation missing]';

    document.getElementById("modal-title").textContent = title;
    document.getElementById("modal-text").textContent = text;

    document.getElementById("modal").style.display = "block";
  }

  function closeModal() {
    document.getElementById("modal").style.display = "none";
  }

  // Close by clicking outside the window
  window.onclick = function(event) {
    const modal = document.getElementById("modal");
    if (event.target === modal) {
      modal.style.display = "none";
    }
  }

  function openCertificateModal(element) {
    const title = element.getAttribute('data-title');
    const image = element.getAttribute('data-image');
    const downloadLink = element.getAttribute('data-download');
  
    document.getElementById("certificateTitle").textContent = title;
    document.getElementById("certificateImage").src = image;
    document.getElementById("certificateDownload").href = downloadLink;
  
    document.getElementById("certificateModal").style.display = "block";
  }
  
  function closeCertificateModal() {
    document.getElementById("certificateModal").style.display = "none";
  }
  
  // To close a modal window by clicking outside of it
  window.addEventListener("click", function(event) {
    const modal = document.getElementById("certificateModal");
    if (event.target === modal) {
      closeCertificateModal();
    }
  });

const contactForm = document.getElementById('contactForm');
const submitButton = document.getElementById('submitButton');
const btnText = submitButton.querySelector('.btn-text');
const loadingSpinner = submitButton.querySelector('.loading-spinner');
const thankYouMessage = document.getElementById('thankYouMessage');

  contactForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    // Block the button and show the spinner
    submitButton.disabled = true;
    submitButton.classList.add('is-loading');
    loadingSpinner.style.display = "block"
    contactForm.style.opacity = "0.4"

    try {
      const response = await fetch(contactForm.action, {
        method: 'POST',
        body: new FormData(contactForm),
        headers: {
          'Accept': 'application/json'
        }
      });
      
      if (response.ok) {
        // Showing a modal window
        thankYouMessage.classList.add('show');
        contactForm.style.opacity = "1"
        contactForm.reset();
        submitButton.disabled = false;
        loadingSpinner.style.display = "none"

        // Automatic closing after 10 seconds
        setTimeout(() => {
          thankYouMessage.classList.remove('show');
        }, 10000);
      }
    } catch (error) {
      console.error('Error:', error);
    }
  });

// // Close modal when clicking outside
thankYouMessage.addEventListener('click', function(e) {
  if (e.target === thankYouMessage) {
    thankYouMessage.classList.remove('show');
  }
});
